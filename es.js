self.asCustomElement=function(e){"use strict";const t=new Set,a=new MutationObserver(e=>{t.forEach(r,e)});function r(e){e(this,a)}a.observe(document,{subtree:!0,childList:!0}),t.observer=a;const n=new WeakMap,{observer:o}=t,c=e=>{for(let t=0,{length:a}=e;t<a;t++){const{target:a,attributeName:r,oldValue:o}=e[t],c=a.getAttribute(r);n.get(a).a[r].forEach(e=>{e.call(a,r,o,c)})}},s=(e,t)=>{for(let a=0,{length:r}=e;a<r;a++){const r=e[a];n.has(r)&&n.get(r)[t].forEach(u,r),s(r.children||[],t)}},l=e=>{for(let t=0,{length:a}=e;t<a;t++){const{addedNodes:a,removedNodes:r}=e[t];s(a,"c"),c(d.takeRecords()),s(r,"d")}},d=new MutationObserver(c);t.add(l);function u(e){e.call(this)}return e.default=(e,{connectedCallback:t,disconnectedCallback:a,observedAttributes:r,attributeChangedCallback:c})=>{l(o.takeRecords());const{a:s,c:u,d:i}=n.get(e)||(e=>{const t={a:{},c:new Set,d:new Set};return n.set(e,t),t})(e);return r&&(d.observe(e,{attributes:!0,attributeOldValue:!0,attributeFilter:r}),r.forEach(t=>{(s[t]||(s[t]=new Set)).add(c),e.hasAttribute(t)&&c.call(e,t,null,e.getAttribute(t))})),a&&i.add(a),t&&(u.add(t),e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED||t.call(e)),e},e}({}).default;
