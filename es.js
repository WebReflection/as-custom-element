self.asCustomElement=function(e){"use strict";const t=new Set,r=new MutationObserver(e=>{t.forEach(a,e)});function a(e){e(this,r)}r.observe(document,{subtree:!0,childList:!0}),t.observer=r;const n=new WeakMap,{observer:o}=t,c=e=>{for(let t=0,{length:r}=e;t<r;t++){const{target:r,attributeName:a,oldValue:o}=e[t],c=r.getAttribute(a);n.get(r).a[a].forEach(e=>{e.call(r,a,o,c)})}},l=(e,t,r,a)=>{for(let o=0,{length:c}=e;o<c;o++){const c=e[o];r.has(c)||!a&&!("querySelectorAll"in c)||(r.add(c),n.has(c)&&n.get(c)[t].forEach(u,c),l(c.querySelectorAll("*"),t,r,!0))}},s=e=>{for(let t=new Set,r=new Set,a=0,{length:n}=e;a<n;a++){const{addedNodes:n,removedNodes:o}=e[a];l(n,"c",t,!1),c(d.takeRecords()),l(o,"d",r,!1)}},d=new MutationObserver(c);t.add(s);function u(e){e.call(this)}return e.default=(e,{connectedCallback:t,disconnectedCallback:r,observedAttributes:a,attributeChangedCallback:c})=>{s(o.takeRecords());const{a:l,c:u,d:i}=n.get(e)||(e=>{const t={a:{},c:new Set,d:new Set};return n.set(e,t),t})(e);return a&&(d.observe(e,{attributes:!0,attributeOldValue:!0,attributeFilter:a}),a.forEach(t=>{(l[t]||(l[t]=new Set)).add(c),e.hasAttribute(t)&&c.call(e,t,null,e.getAttribute(t))})),r&&i.add(r),t&&(u.add(t),e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED||t.call(e)),e},e}({}).default;
