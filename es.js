self.asCustomElement=function(e){"use strict";const t=new WeakMap,a=(e,a)=>{for(let r=0,{length:o}=e;r<o;r++){const{target:o,attributeName:c,oldValue:s}=e[r];n(t.get(o).a.get(a),o,c,s)}},n=(e,t,a,n)=>{e.call(t,a,n,t.getAttribute(a))},r=()=>{},o=(e,a)=>{for(let n=0,{length:r}=e;n<r;n++){const r=e[n],c=t.get(r);c&&("d"===a&&c.a.forEach(s),c[a].forEach(d,r)),o(r.children||[],a)}},c=e=>{for(let t=0,{length:a}=e;t<a;t++){const{addedNodes:a,removedNodes:n}=e[t];o(a,"c"),o(n,"d")}},s=(e,t)=>{a(t.takeRecords(),t)},l=new MutationObserver(c);l.observe(document,{childList:!0,subtree:!0});function d(e){e.call(this)}return e.default=(e,{connectedCallback:o,disconnectedCallback:s,observedAttributes:d,attributeChangedCallback:u})=>{c(l.takeRecords());const{a:i,c:b,d:h}=t.get(e)||(e=>{const a={a:new Map,c:new Set,d:new Set};return t.set(e,a),a})(e);if(d){const t=new MutationObserver(a);t.observe(e,{attributes:!0,attributeFilter:d,attributeOldValue:!0}),i.set(t,u||r),d.forEach(t=>{e.hasAttribute(t)&&n(u||r,e,t,null)})}return b.add(o||r),h.add(s||r),e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED||(o||r).call(e),e},e}({}).default;
