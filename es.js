self.asCustomElement=function(t){"use strict";const e=new WeakMap,a=t=>{for(let a=0,{length:n}=t;a<n;a++){const{attributeName:n,oldValue:r,target:o}=t[a],c=o.getAttribute(n);e.get(o).a.forEach(t=>{t.call(o,n,r,c)})}},n=()=>{},r=(t,a)=>{for(let n=0,{length:o}=t;n<o;n++){const o=t[n];e.has(o)&&("d"===a&&e.get(o).o.forEach(c),e.get(o)[a].forEach(l,o)),r(o.children||[],a)}},o=t=>{for(let e=0,{length:a}=t;e<a;e++){const{addedNodes:a,removedNodes:n}=t[e];r(a,"c"),r(n,"d")}},c=t=>{a(t.takeRecords())},d=new MutationObserver(o);d.observe(document,{childList:!0,subtree:!0});function l(t){t.call(this)}return t.default=(t,{connectedCallback:r,disconnectedCallback:c,observedAttributes:l,attributeChangedCallback:s})=>{o(d.takeRecords());const{a:u,c:i,d:b,o:h}=e.get(t)||(t=>{const a={a:new Set,c:new Set,d:new Set,o:new Set};return e.set(t,a),a})(t);if(l){const e=new MutationObserver(a);e.observe(t,{attributes:!0,attributeFilter:l,attributeOldValue:!0}),u.add(s||n),h.add(e),l.forEach(e=>{t.hasAttribute(e)&&(s||n).call(t,e,null,t.getAttribute(e))})}return i.add(r||n),b.add(c||n),t.ownerDocument.contains(t)&&(r||n).call(t),t},t}({}).default;
